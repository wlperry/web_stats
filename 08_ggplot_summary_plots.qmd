---
title: "ggplot2 Summary Plots: Mean & Standard Error"
description: "Learn how to plot means and standard errors using ggplot2 and tidyverse."
format:
  html:
    toc: true
    toc-depth: 2
---

# Objective

In this guide you will learn how to: - Read in data from an Excel file. - Compute summary statistics (mean and standard error). - Create ggplot2 plots that display the mean and standard error using `stat_summary()`.

# Data for the Exercise

We use a sample M&M dataset. For more sample data files, check out the [Data Files page](99_example_data_files.qmd).

-   [M&M CSV file](data/mms.csv)
-   [M&M Excel file](data/mms.xlsx)

# Load Libraries

Make sure you have installed these packages; if not, run `install.packages("packageName")` separately.

```{r}
library(tidyverse)  # Loads ggplot2, dplyr, and other tidyverse packages
library(readxl)     # For reading Excel files
library(skimr)      # For summary statistics (optional)
```

# Read in the Data

We read the M&M dataset from an Excel file.

``` r
mm_df <- read_excel("data/mms.xlsx")
head(mm_df)
```

```{r, echo=FALSE}
# This code runs but isn't shown in the rendered document.
mm_df <- read_excel("data/mms.xlsx")
head(mm_df)
```

# Summary Statistics

You can quickly inspect your data using base R or `skimr()`. For example, to calculate the mean diameter and mass by `center` and `color`, you can use:

``` r
mm_summary <- mm_df %>% 
  group_by(center, color) %>% 
  summarize(
    mean_diameter = mean(diameter, na.rm = TRUE),
    mean_mass = mean(mass, na.rm = TRUE)
  )
mm_summary
```

```{r, echo=FALSE}
# This code runs but isn't shown in the rendered document.
mm_summary <- mm_df %>% 
  group_by(center, color) %>% 
  summarize(
    mean_diameter = mean(diameter, na.rm = TRUE),
    mean_mass = mean(mass, na.rm = TRUE)
  )
mm_summary
```

# Plotting Mean and Standard Error with ggplot2

We use `stat_summary()` to display the mean as a point and the standard error as error bars.

## 1. Basic Mean and SE Plot

This plot shows the mean diameter for each candy color with standard error error bars.

``` r
ggplot(mm_df, aes(x = color, y = diameter, color = color)) +
  stat_summary(fun = mean, na.rm = TRUE, geom = "point", size = 3) +
  stat_summary(fun.data = mean_se, na.rm = TRUE, geom = "errorbar", width = 0.2) +
  labs(
    x = "Candy Color",
    y = "Diameter (units)",
    title = "Mean Diameter with Standard Error"
  ) +
  theme_minimal()
```

```{r, echo=FALSE}
ggplot(mm_df, aes(x = color, y = diameter, color = color)) +
  stat_summary(fun = mean, na.rm = TRUE, geom = "point", size = 3) +
  stat_summary(fun.data = mean_se, na.rm = TRUE, geom = "errorbar", width = 0.3) +
  labs(
    x = "Candy Color",
    y = "Diameter (units)",
    title = "Mean Diameter with Standard Error"
  ) +
  theme_minimal()

```

## 2. Adding Grouping by Center

Here, we add a shape mapping to distinguish between different candy centers (e.g., plain, peanut, etc.).

``` r
ggplot(mm_df, aes(x = color, y = diameter, color = color, shape = center)) +
  stat_summary(fun = mean, na.rm = TRUE, geom = "point", size = 3) +
  stat_summary(fun.data = mean_se, na.rm = TRUE, geom = "errorbar", width = 0.3) +
  labs(
    x = "Candy Color",
    y = "Diameter (units)",
    title = "Mean Diameter with SE Grouped by Center"
  ) +
  theme_minimal()
```

```{r, echo=FALSE}
ggplot(mm_df, aes(x = color, y = diameter, color = color, shape = center)) +
  stat_summary(fun = mean, na.rm = TRUE, geom = "point", size = 3) +
  stat_summary(fun.data = mean_se, na.rm = TRUE, geom = "errorbar", width = 0.3) +
  labs(
    x = "Candy Color",
    y = "Diameter (units)",
    title = "Mean Diameter with SE Grouped by Center"
  ) +
  theme_minimal()

```

## 3. Dodging for Better Separation

When grouping by center, points and error bars may overlap. Use `position_dodge()` to separate them.

``` r
ggplot(mm_df, aes(x = color, y = diameter, color = color, shape = center)) +
  stat_summary(
    fun = mean, na.rm = TRUE, geom = "point", size = 3,
    position = position_dodge(width = 0.3)
  ) +
  stat_summary(
    fun.data = mean_se, na.rm = TRUE, geom = "errorbar", width = 0.3,
    position = position_dodge(width = 0.3)
  ) +
  labs(
    x = "Candy Color",
    y = "Diameter (units)",
    title = "Mean Diameter with SE (Dodged by Center)"
  ) +
  theme_minimal()
```

```{r, echo=FALSE}
ggplot(mm_df, aes(x = color, y = diameter, color = color, shape = center)) +
  stat_summary(
    fun = mean, na.rm = TRUE, geom = "point", size = 3,
    position = position_dodge(width = 0.3)
  ) +
  stat_summary(
    fun.data = mean_se, na.rm = TRUE, geom = "errorbar", width = 0.3,
    position = position_dodge(width = 0.3)
  ) +
  labs(
    x = "Candy Color",
    y = "Diameter (units)",
    title = "Mean Diameter with SE (Dodged by Center)"
  ) +
  theme_minimal()

```

# Summary

In this guide, you learned how to:

-   Load and inspect data.

-   Compute summary statistics.

-   Create ggplot2 plots displaying the mean and standard error.

-   Enhance plots by grouping and dodging to improve clarity.

-   
