---
title: "Reading and Writing Data"
description: "Learn to read data from various file types and save your processed data."
format:
  html:
    toc: true
    toc-depth: 2
---

# Objective

Learn how to read data from different file types, process it, and then save your results to an output directory. We'll cover:

-   CSV files
-   Excel files
-   Tab-delimited files
-   Space-delimited files

For more sample data files, see the [Dataframes page](99_example_data_files.qmd).

------------------------------------------------------------------------

# Load Required Libraries

We'll use `tidyverse` for CSV and delimited files, and `readxl` for Excel files.

```{r, echo=TRUE, message=FALSE, warning=FALSE, error=FALSE}
# Load necessary libraries
library(janitor)
library(readxl)
library(tidyverse)
```

# Reading Data Files

1.  CSV Files

```{r, echo=TRUE, message=FALSE, warning=FALSE, error=FALSE}
# Read a CSV file
mm_df <- read_csv("data/mms.csv")
```

2.  Excel Files

```{r, echo=TRUE, message=FALSE, warning=FALSE, error=FALSE}
# Read an Excel file
mm_excel_df <- read_excel("data/mms.xlsx")
```

3.  Tab-Delimited Files

```{r, echo=TRUE, message=FALSE, warning=FALSE, error=FALSE}
# Read a tab-delimited file (alternatively, use read_tsv)
mm_tab_df <- read_delim("data/mms_tab.txt", delim = "\t")
```

4.  Space-Delimited Files

```{r, echo=TRUE, message=FALSE, warning=FALSE, error=FALSE}
# Read a space-delimited file
mm_space_df <- read_delim("data/mms_space.txt", delim = " ")
```

# Inspecting the Data

After reading in a file, check its structure using:

```{r, echo=TRUE, message=FALSE, warning=FALSE, error=FALSE}
# Quickly inspect the data
glimpse(mm_df)
# or 
head(mm_df)
```

# Saving Processed Data

Before saving your results, ensure the output directory exists. You can create it if needed:

```{r, echo=TRUE, message=FALSE, warning=FALSE, error=FALSE}
# Create the output directory if it doesn't exist
if (!dir.exists("output")) {
  dir.create("output")
}
```

Then, save your data frame as a CSV file:

```{r, echo=TRUE, message=FALSE, warning=FALSE, error=FALSE}
# Save the processed data to the output directory
write_csv(mm_df, "output/mm_output.csv")
```

# Cleaning up messy or poorly formatted variable names

To do this we will use janitor that has a lot of functions that automate this task.

```{r, echo=TRUE, message=FALSE, warning=FALSE, error=FALSE}
# Read an Excel file
mm_excel_df <- read_excel("data/mms.xlsx") %>%    
              clean_names()       
```
